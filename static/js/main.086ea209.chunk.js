(this.webpackJsonpfrontend=this.webpackJsonpfrontend||[]).push([[0],{13:function(e){e.exports=JSON.parse('[{"id":1,"project_name":"Design the solution","tasks":[{"id":1,"description":"Identify resources to be monitored.","status":3},{"id":2,"description":"Define users and workflow","status":1},{"id":3,"description":"Identify event sources by resource type.","status":2},{"id":4,"description":"Define the relationship between resources and business systems.","status":2},{"id":5,"description":"Identify tasks and URLs by resource type.","status":2}]},{"id":2,"project_name":"Prepare for implementation","tasks":[{"id":6,"description":"Identify the implementation team.","status":2},{"id":7,"description":"Order the server hardware for production as well as test/quality assurance (QA).","status":2},{"id":8,"description":"Order console machines.","status":2},{"id":9,"description":"Order prerequisite software.","status":2},{"id":10,"description":"Identify the test LPAR.","status":2}]},{"id":3,"project_name":"Prepare the test/QA environment","tasks":[{"id":11,"description":"Install test and QA servers and prerequisite software.","status":2},{"id":12,"description":"Install console machines and prerequisite software.","status":2}]},{"id":4,"project_name":"Install the product in the test/QA environment.","tasks":[{"id":13,"description":"Install Tivoli Business Systems Manager and appropriate patches on test or QA servers.","status":2},{"id":14,"description":"Install Tivoli Business Systems Manager on console machines.","status":1},{"id":15,"description":"Install event enablement on the Tivoli Enterprise Console server.","status":2},{"id":16,"description":"Create configuration level objects for the test LPAR.","status":3},{"id":17,"description":"Configure servers, Source/390 on the test LPAR, event enablement on the Tivoli Enterprise Console server, and verify connectivity.","status":1}]},{"id":5,"project_name":"Implement distributed data feeds","tasks":[{"id":18,"description":"Extend the data model.","status":3},{"id":19,"description":"Configure the instance placement.","status":1},{"id":20,"description":"Configure the Tivoli Enterprise Console rules to send events.","status":2},{"id":21,"description":"Associate tasks and URLs with object types.","status":1}]},{"id":6,"project_name":"Schedule jobs","tasks":[{"id":22,"description":"Tivoli Business Systems Manager SQL server jobs","status":2},{"id":23,"description":"Source/390 rediscoveries","status":1},{"id":24,"description":"Batch schedule download/process","status":2}]},{"id":7,"project_name":"Prepare the production environment.","tasks":[{"id":25,"description":"Install production servers and prerequisite software.","status":2},{"id":26,"description":"Install console machines and prerequisite software.","status":1},{"id":27,"description":"Verify connectivity from production servers to the production LPAR, Tivoli Enterprise Console server, and console machines.","status":2}]},{"id":8,"project_name":"Install the product in the production environment.","tasks":[{"id":18,"description":"Install Tivoli Business Systems Manager on console machines.","status":2},{"id":29,"description":"Install event enablement on the Tivoli Enterprise Console server.","status":3},{"id":30,"description":"Create configuration level objects for the production LPARs.","status":1}]},{"id":9,"project_name":"Install the history server.","tasks":[{"id":31,"description":"Create databases on the history server.","status":2},{"id":32,"description":"Set up and test jobs on the database server to produce the database backup.","status":1},{"id":33,"description":"Set up and test jobs to copy backup databases to the history server.","status":3},{"id":34,"description":"Set up and test jobs to replicate events to the history server.","status":1}]}]')},23:function(e,t,n){e.exports=n(35)},28:function(e,t,n){},34:function(e,t,n){},35:function(e,t,n){"use strict";n.r(t);var a=n(0),s=n.n(a),r=n(20),i=n.n(r),o=n(14),c=n(10),l=n(5),u=n(6),d=n(8),p=n(7),m=n(9),h=(n(28),n(13)),f=function(e){function t(){return Object(l.a)(this,t),Object(d.a)(this,Object(p.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(u.a)(t,[{key:"render",value:function(){return s.a.createElement("table",null,s.a.createElement("thead",null,s.a.createElement("tr",null,s.a.createElement("th",null,"#"),s.a.createElement("th",null,"Project Name"))),s.a.createElement("tbody",null,h.map((function(e){return s.a.createElement("tr",{key:e.id},s.a.createElement("td",null,e.id),s.a.createElement("td",null,s.a.createElement(o.b,{to:"/project/"+e.id},e.project_name)))}))))}}]),t}(s.a.Component),v=function(e){function t(e){var n;return Object(l.a)(this,t),(n=Object(d.a)(this,Object(p.a)(t).call(this,e))).toggleInput=function(){n.setState({flag:!n.state.flag})},n.state={flag:!1,project_name:""},n}return Object(m.a)(t,e),Object(u.a)(t,[{key:"UNSAFE_componentWillMount",value:function(){this.setState({project_name:this.props.project.project_name})}},{key:"render",value:function(){var e=this,t=this.state,n=t.flag,a=t.project_name;return s.a.createElement("div",{className:"padding-10px padding-left-10p"},n?s.a.createElement("div",null,s.a.createElement("span",null,s.a.createElement("input",{value:a,onChange:function(t){return e.setState({project_name:t.target.value})}})),s.a.createElement("button",{className:"btn padding-left-10px",onClick:function(){return e.toggleInput()}},"Done")):s.a.createElement("span",null,s.a.createElement("span",{className:"fs-27"},a),s.a.createElement("button",{className:"btn padding-left-10px",onClick:function(){return e.toggleInput()}},"Edit")))}}]),t}(s.a.Component),b=(n(34),[{status_name:"Not Started",id:1,background:"#faa0a0"},{status_name:"In Progress",id:2,background:"#a0a0fe"},{status_name:"Done",id:3,background:"#a0ffa0"}]),j=function(e){function t(){var e,n;Object(l.a)(this,t);for(var a=arguments.length,s=new Array(a),r=0;r<a;r++)s[r]=arguments[r];return(n=Object(d.a)(this,(e=Object(p.a)(t)).call.apply(e,[this].concat(s)))).state={project:null},n.onChangeStatus=function(e,t){var a=n.state.project;a.tasks.map((function(n,s){n.id===t&&(a.tasks[s].status=Number(e.target.value))})),n.setState({project:a})},n}return Object(m.a)(t,e),Object(u.a)(t,[{key:"UNSAFE_componentWillMount",value:function(){this.setState({project:this.props.project})}},{key:"render",value:function(){var e=this,t=this.state.project;return s.a.createElement("table",null,s.a.createElement("thead",null,s.a.createElement("tr",null,s.a.createElement("th",null,"#"),s.a.createElement("th",null,"Task Name"),s.a.createElement("th",null,"Status"))),s.a.createElement("tbody",null,t.tasks.map((function(t){var n=b.filter((function(e){return e.id===t.status}))[0].background;return s.a.createElement("tr",{style:{backgroundColor:n},key:t.id},s.a.createElement("td",null,t.id),s.a.createElement("td",{style:{textAlign:"left"}}," ",t.description),s.a.createElement("td",null,s.a.createElement("select",{value:t.status,onChange:function(n){return e.onChangeStatus(n,t.id)}},b.map((function(e){return s.a.createElement("option",{value:e.id,key:e.id},e.status_name)})))))}))))}}]),t}(s.a.Component),E=function(e){function t(){var e,n;Object(l.a)(this,t);for(var a=arguments.length,s=new Array(a),r=0;r<a;r++)s[r]=arguments[r];return(n=Object(d.a)(this,(e=Object(p.a)(t)).call.apply(e,[this].concat(s)))).state={project:null},n}return Object(m.a)(t,e),Object(u.a)(t,[{key:"UNSAFE_componentWillMount",value:function(){var e=this,t=this.props.project;t=h.filter((function(t){return t.id===Number(e.props.match.params.id)})),this.setState({project:t.length?t[0]:{}})}},{key:"render",value:function(){var e=this.state.project;return s.a.createElement("div",null,s.a.createElement(v,{project:e}),s.a.createElement(j,{project:e}))}}]),t}(s.a.Component);var y=function(){return s.a.createElement(o.a,null,s.a.createElement(c.c,null,s.a.createElement(c.a,{exact:!0,path:"/",component:function(){return s.a.createElement(f,null)}}),s.a.createElement(c.a,{exact:!0,path:"/project/:id",component:function(e){return s.a.createElement(E,e)}})))};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(s.a.createElement(y,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()}))}},[[23,1,2]]]);
//# sourceMappingURL=main.086ea209.chunk.js.map